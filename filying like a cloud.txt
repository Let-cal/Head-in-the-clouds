import { faCloud } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { useEffect, useRef, useState } from "react";
function App() {
  const [apologies, setApologies] = useState([]);
  const [isButtonclicked, setIsButtonClicked] = useState(false);
  const [volume, setVolume] = useState(0.5);
  const audioRef = useRef(
    new Audio("./src/compenents/audio/Head-In-The-Clounds.mp4")
  ); // Đường dẫn đến file âm thanh
  const handleAudioChange = (event) => {
    const newVolume = parseFloat(event.target.value);
    setVolume(newVolume);
    audioRef.current.volume = newVolume;
  };
  const handleButtonClick = () => {
    if (isButtonclicked) {
      setApologies([]);
      setIsButtonClicked(false);
      audioRef.current.pause(); // Dừng phát âm thanh
    } else {
      const newApologies = [];
      for (let i = 0; i < 20; i++) {
        newApologies.push({
          content: "Yêu bé yêu của anh <Dương Thị Hoài>",
          left: Math.random() * window.innerWidth,
          top: Math.random() * window.innerHeight,
          speed: 0.05 + Math.random() * 0.1, // Tốc độ di chuyển
          opacity: Math.random(),
        });
      }
      setApologies(newApologies);
      setIsButtonClicked(true);
      audioRef.current.play(); // Phát âm thanh
      audioRef.current.volume = volume; //
    }
  };
  useEffect(() => {
    return () => {
      // Cleanup function
      audioRef.current.pause(); // Dừng phát âm thanh khi component unmount
    };
  }, []);
  useEffect(() => {
    if (isButtonclicked) {
      const animationDuration = 30000; // Thời gian animation (miliseconds)
      const stepDuration = 50; // Thời gian cập nhật vị trí (miliseconds)
      const numSteps = animationDuration / stepDuration;

      let step = 0;
      const interval = setInterval(() => {
        step++;

        setApologies((prevApologies) => {
          return prevApologies.map((apology) => {
            const newX = (apology.left + apology.speed) % window.innerWidth; // Di chuyển theo chiều ngang với tốc độ
            return {
              ...apology,
              left: newX,
            };
          });
        });

        if (step >= numSteps) clearInterval(interval);
      }, stepDuration);

      return () => clearInterval(interval);
    }
  }, [isButtonclicked]);

  return (
    <div className="root w-full h-screen bg-gradient-to-br from-yellow-600 via-red-500 to-blue-300">
      <div className="navigation">
        <div className="buttonAudio flex flex-col w-48 h-14">
          <button
            className="button w-48 h-14 flex justify-center items-center py-2 px-4 rounded bg-blue-500 hover:bg-blue-700 text-white font-bold"
            onClick={handleButtonClick}
          >
            :3 1 chút ngẫu hứng yêu em
          </button>
          <input
            type="range"
            className="changeVolume"
            min="0"
            max="1"
            step="0.01"
            value={volume}
            onChange={handleAudioChange}
          />
        </div>
      </div>
      <div className="py-2 px-4 rounded flex flex-col gap-11">
        {apologies.map((apology, index) => (
          <p
            className="relative  bg-white rounded-full py-2 px-4 shadow-md"
            key={index}
            style={{
              position: "absolute",
              left: apology.left,
              top: apology.top,
              opacity: apology.opacity,
              transform: `scale(${apology.scale})`,
              transition: "opacity 2s, transform 5s",
            }}
          >
            <FontAwesomeIcon icon={faCloud} className="text-blue-400" />
            <div className="relative z-10">{apology.content}</div>
            <span className="absolute h-3 w-6 bg-white rounded-full left-1/4 -bottom-1"></span>
            <span className="absolute h-5 w-8 bg-white rounded-full left-1/2 -bottom-1/2"></span>
            <span className="absolute h-4 w-7 bg-white rounded-full left-3/4 -bottom-1"></span>
          </p>
        ))}
      </div>
    </div>
  );
}

export default App;
